---
# Determine if build config already exists
- name: See if template already exists
  oc_obj:
    namespace: "{{ project_name }}"
    kind: template
    name: "{{ template_name }}"
    state: list
    kubeconfig: "{{ lookup('env','HOME')}}/.kube/config"
  register: app_deployed
  tags:
    - deploy
    - undeploy

- set_fact:
    app_is_deployed: "{{'results' in app_deployed.results and 'kind' in app_deployed.results.results[0] }}"
  tags:
    - deploy
    - undeploy

# Remove Deployments  Template
- name: Remove deployments template
  oc_obj:
    namespace: "{{ project_name }}"
    kind: template
    name: "{{ template_name }}"
    state: absent
    kubeconfig: "{{ lookup('env','HOME')}}/.kube/config"
  when: app_is_deployed
  tags:
    - undeploy

# Remove deployed resources for app
- name: Remove resources for blue
  oc_obj:
    namespace: "{{ project_name }}"
    kind: "dc,svc"
    name: "inventory-blue"
    state: absent
    kubeconfig: "{{ lookup('env','HOME')}}/.kube/config"
  when: app_is_deployed
  tags:
    - undeploy

- name: Remove resources for green
  oc_obj:
    namespace: "{{ project_name }}"
    kind: "dc,svc,route"
    name: "inventory-green"
    state: absent
    kubeconfig: "{{ lookup('env','HOME')}}/.kube/config"
  when: app_is_deployed
  tags:
    - undeploy

- name: Remove database resources for app
  oc_obj:
    namespace: "{{ project_name }}"
    kind: "dc,svc,pvc"
    name: "inventory-postgresql"
    state: absent
    kubeconfig: "{{ lookup('env','HOME')}}/.kube/config"
  when: app_is_deployed
  tags:
    - undeploy

# Delete regular inventory service resources
- name: Delete inventory service resources
  oc_obj:
    namespace: "{{ project_name }}"
    kind: "all,pvc"
    selector: "app=inventory"
    state: absent
    kubeconfig: "{{ lookup('env','HOME')}}/.kube/config"
  when: not app_is_deployed
  tags:
    - deploy

# Load deployment template
- name: Get deployments template
  get_url:
    url: "{{ raw_git_url }}/openshift/templates/{{ template_filename }}"
    dest: "/tmp/{{ template_filename }}"
    mode: 0400
  when: not app_is_deployed
  tags:
    - deploy

- name: Load deployments template
  oc_obj:
    namespace: "{{ project_name }}"
    kind: template
    name: "{{ template_name }}"
    state: present
    kubeconfig: "{{ lookup('env','HOME')}}/.kube/config"
    files:
    - "/tmp/{{ template_filename }}"
  when: not app_is_deployed
  tags:
    - deploy

- name: Deploy application resources
  oc_process:
    namespace: "{{ project_name }}"
    template_name: "{{ template_name }}"
    create: true
    kubeconfig: "{{ lookup('env','HOME')}}/.kube/config"
    params:
      HOSTNAME_SUFFIX: "{{ project_name }}.{{ domain }}"
  when: not app_is_deployed
  tags:
    - deploy
